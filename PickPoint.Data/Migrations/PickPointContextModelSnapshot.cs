// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PickPoint.Data.DB;

namespace PickPoint.Data.Migrations
{
    [DbContext(typeof(PickPointContext))]
    partial class PickPointContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PickPoint.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostamateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostamateId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Customer = "Petrov",
                            Items = "[\"product1\",\"product2\"]",
                            Phone = "+7111-222-33-44",
                            PostamateId = "0001-001",
                            Price = 2000.50m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Customer = "Ivanov",
                            Items = "[\"product2\"]",
                            Phone = "+7111-222-33-55",
                            PostamateId = "0003-100",
                            Price = 300m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Customer = "Sidorov",
                            Items = "[\"product4\",\"product2\"]",
                            Phone = "+7222-222-33-44",
                            PostamateId = "0002-010",
                            Price = 499.99m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Customer = "Petrov",
                            Items = "[\"product1\",\"product2\",\"product6\"]",
                            Phone = "+7111-222-33-44",
                            PostamateId = "0001-001",
                            Price = 5000m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Customer = "Toporov",
                            Items = "[\"product5\"]",
                            Phone = "+7111-222-33-66",
                            PostamateId = "0004-230",
                            Price = 1000m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("PickPoint.Data.Entities.Postamate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Postamates");

                    b.HasData(
                        new
                        {
                            Id = "0001-001",
                            Address = "Some place 1-1",
                            Status = true
                        },
                        new
                        {
                            Id = "0001-002",
                            Address = "Some place 1-2",
                            Status = true
                        },
                        new
                        {
                            Id = "0001-003",
                            Address = "Some place 1-3",
                            Status = false
                        },
                        new
                        {
                            Id = "0002-010",
                            Address = "Some place 2-1",
                            Status = true
                        },
                        new
                        {
                            Id = "0002-020",
                            Address = "Some place 2-2",
                            Status = false
                        },
                        new
                        {
                            Id = "0002-030",
                            Address = "Some place 2-3",
                            Status = true
                        },
                        new
                        {
                            Id = "0003-100",
                            Address = "Some place 3-1",
                            Status = true
                        },
                        new
                        {
                            Id = "0003-200",
                            Address = "Some place 3-2",
                            Status = false
                        },
                        new
                        {
                            Id = "0003-300",
                            Address = "Some place 3-3",
                            Status = false
                        },
                        new
                        {
                            Id = "0004-120",
                            Address = "Some place 4-1",
                            Status = true
                        },
                        new
                        {
                            Id = "0004-230",
                            Address = "Some place 4-2",
                            Status = true
                        },
                        new
                        {
                            Id = "0004-340",
                            Address = "Some place 4-3",
                            Status = true
                        });
                });

            modelBuilder.Entity("PickPoint.Data.Entities.Order", b =>
                {
                    b.HasOne("PickPoint.Data.Entities.Postamate", "Postamate")
                        .WithMany("Orders")
                        .HasForeignKey("PostamateId");

                    b.Navigation("Postamate");
                });

            modelBuilder.Entity("PickPoint.Data.Entities.Postamate", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
